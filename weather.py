import aiohttp
from config import OPENWEATHER_API_KEY, OPENWEATHER_API_URL, OPENWEATHER_FORECAST_URL

async def get_weather(city: str) -> str:
    params = {
        'q': city,
        'appid': OPENWEATHER_API_KEY,
        'units': 'metric',  
        'lang': 'ru'  
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(OPENWEATHER_API_URL, params=params) as response:
            if response.status != 200:
                raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status}")
            
            data = await response.json()
            
            weather_description = data['weather'][0]['description']
            temperature = data['main']['temp']
            feels_like = data['main']['feels_like']
            humidity = data['main']['humidity']
            pressure = data['main']['pressure']
            wind_speed = data['wind']['speed']
            
            weather_info = (
                f"üèô –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:\n\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n"
                f"üå° –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n"
                f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"üå™ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
                f"üîµ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞"
            )
            
            return weather_info


async def get_weather_by_coords(lat: float, lon: float) -> str:
    params = {
        'lat': lat,
        'lon': lon,
        'appid': OPENWEATHER_API_KEY,
        'units': 'metric',
        'lang': 'ru'
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(OPENWEATHER_API_URL, params=params) as response:
            if response.status != 200:
                raise Exception(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ö–æ–¥: {response.status}")

            data = await response.json()

            city_name = data.get('name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥')

            weather_description = data['weather'][0]['description']
            temperature = data['main']['temp']
            feels_like = data['main']['feels_like']
            humidity = data['main']['humidity']
            pressure = data['main']['pressure']
            wind_speed = data['wind']['speed']

            weather_info = (
                f"üìç –ü–æ–≥–æ–¥–∞ –ø–æ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é ({city_name}):\n\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n"
                f"üå° –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C\n"
                f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"üå™ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å\n"
                f"üîµ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞"
            )

            return weather_info

async def get_weather_forecast(city: str) -> str:
    params = {
        'q': city,
        'appid': OPENWEATHER_API_KEY,
        'units': 'metric',
        'lang': 'ru'
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(OPENWEATHER_FORECAST_URL, params=params) as response:
            if response.status != 200:
                raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã. –ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status}")
            
            data = await response.json()
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ –¥–Ω—è–º
            daily_forecasts = {}
            for item in data['list']:
                date = item['dt_txt'].split()[0]  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É
                if date not in daily_forecasts:
                    daily_forecasts[date] = {
                        'temp_min': item['main']['temp_min'],
                        'temp_max': item['main']['temp_max'],
                        'description': item['weather'][0]['description'],
                        'humidity': item['main']['humidity'],
                        'wind_speed': item['wind']['speed']
                    }
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞
            forecast_text = f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ {city} –Ω–∞ 5 –¥–Ω–µ–π:\n\n"
            
            for date, forecast in list(daily_forecasts.items())[:5]:  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ 5 –¥–Ω–µ–π
                forecast_text += (
                    f"üìÜ {date}\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {forecast['temp_min']:.1f}¬∞C - {forecast['temp_max']:.1f}¬∞C\n"
                    f"‚òÅÔ∏è {forecast['description']}\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {forecast['humidity']}%\n"
                    f"üå™ –í–µ—Ç–µ—Ä: {forecast['wind_speed']} –º/—Å\n\n"
                )
            
            return forecast_text